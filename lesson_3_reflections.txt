When would you want to use a remote repository rather than keeping all your work local?

Basically always if I have acces to private & public repos. With privates I can work on something I don't want to share. This way I have always backup of my files on server. Same with public ones. For both types however it makes easier working with others.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because there may had occured some conflicts in the way when you did not pushed your changes but someone else did. This way you also have more control.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forking is usefull for getting copy of repository to which you do not have acces for & it gives credit for authors as well. I can use cloning to get copy of a remote repository with remote set. Branches are for making some changes without affecting the main branch. You can use it also to store older version of your program.

What is the benefit of having a copy of the last known state of the remote stored locally?

You can fetch all changes done on remote & then safely work on your merge offline. Additionaly merging with local copy should be faster.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
I would have to personally inform others about my pull request & they would have to see the differences on their own.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

Each time I am adding new feature that's not fully completed yet. This also allows others to review my changes easily just before pushing them into production branch.
Not commiting to separate branch makes sense when I work only by myself at the begining of the project.
